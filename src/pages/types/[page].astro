---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const allTypes = await getCollection('types');
  const sortedTypes = allTypes.sort((a, b) => a.data.name.localeCompare(b.data.name));
  return paginate(sortedTypes, { pageSize: 3 });
}

const { page } = Astro.props as any;
---

<Layout>
  <h1 class="display-4 mb-4">TypeScript Types</h1>
  <p class="text-muted mb-5">Page {page.currentPage} of {page.lastPage}</p>

  {page.data.map(async (type: any) => {
    const { Content } = await type.render();
    return (
      <article class="mb-5">
        <h2 class="display-5 border-bottom pb-2 mb-3">{type.data.name}</h2>
        <p class="lead">{type.data.description}</p>
        <div class="content-text text-justify">
          <Content />
        </div>
      </article>
    )
  })}

  <nav class="d-flex justify-content-between" aria-label="Page navigation">
    <div>
      {page.url.prev ? (
        <a href={page.url.prev} class="btn btn-outline-primary">
          &laquo; Previous Page
        </a>
      ) : <div style="width: 155px;"/>}
    </div>
    <div>
      {page.url.next && (
        <a href={page.url.next} class="btn btn-outline-primary">
          Next Page &raquo;
        </a>
      )}
    </div>
  </nav>
</Layout>